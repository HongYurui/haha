//
//  CipherText.cpp
//  DEMO_DAY_04_USER_XCODE
//
//  Created by Jingtao Fan on 2021/7/29.
//
/*************************************************************************
【文件名】                 （CipherText.cpp)
【功能模块和目的】         （根据MD5规则加密字符串)
【开发者及日期】           （范静涛 2021.7.29)
*************************************************************************/
#include <string>
using namespace std;
#include "CipherText.hpp"
/*************************************************************************
【函数名称】       （CipherText)
【函数功能】       （构造函数)
【参数】           （空)
【返回值】         （空)
【开发者及日期】   （范静涛 2021.7.29)
*************************************************************************/
CipherText::CipherText(const string& Plainext) : MD5(Plainext) {
 
}
/*************************************************************************
【函数名称】       （~CipherText)
【函数功能】       （析构函数)
【参数】           （空)
【返回值】         （空)
【开发者及日期】   （范静涛 2021.7.29)
*************************************************************************/
CipherText::~CipherText() {

}
/*************************************************************************
【函数名称】       （operator==)
【函数功能】       （重载等于运算符)
【参数】           （常引用的字符串型对象strPlaintext,表示明文文本)
【返回值】         （布尔型,表示比较的结果)
【开发者及日期】   （范静涛 2021.7.29)
*************************************************************************/
bool CipherText::operator==(const string& Plaintext) const {
    return m_CipherText == MD5::Encrypt(Plaintext);
}
/*************************************************************************
【函数名称】       （operator!=)
【函数功能】       （重载不等于运算符)
【参数】           （常引用的字符串型对象strPlaintext,表示明文文本)
【返回值】         （布尔型,表示比较的结果)
【开发者及日期】   （范静涛 2021.7.29)
*************************************************************************/
bool CipherText::operator!=(const string& Plaintext) const {
    return !operator==(Plaintext);
}
/*************************************************************************
【函数名称】       （operator<<)
【函数功能】       （重载重定向运算符)
【参数】           （输出流和常引用的表示明文文本的字符串型对象strPlaintext)
【返回值】         （输出流)
【开发者及日期】   （范静涛 2021.7.29)
*************************************************************************/
ostream& operator<<(ostream& stream, const CipherText& CipherText) {
    stream << CipherText.m_CipherText;
    return stream;
}
/*************************************************************************
【函数名称】       （MakeFromCipherText)
【函数功能】       （构造新的密文类对象)
【参数】           （表示明文文本的字符串型对象strPlaintext)
【返回值】         （密文类对象)
【开发者及日期】   （范静涛 2021.7.29)
*************************************************************************/
CipherText CipherText::MakeFromCipherText(const string& CipherText) {
    class CipherText P1("123");
    P1.m_CipherText = CipherText;
    return P1;
}

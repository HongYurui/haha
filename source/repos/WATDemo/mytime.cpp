/*************************************************************************
【文件名】                 （mytime.cpp)
【功能模块和目的】         （定义Ttime类的成员函数)
【开发者及日期】           （洪宇睿 2021.8.1)
*************************************************************************/
#include "mytime.h"
/*************************************************************************
【函数名称】       （Time)
【函数功能】       （默认构造函数)
【参数】           （空)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
Time::Time() : uHour(m_uHour), uMinute(m_uMinute), uSecond(m_uSecond) {
    m_uHour = 0;
    m_uMinute = 0;
    m_uSecond = 0;
}
/*************************************************************************
【函数名称】       （Time)
【函数功能】       （构造函数)
【参数】           （三个分别代表时分秒的无符号短整型数)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
Time::Time(unsigned int uHour,
           unsigned int uMinute,
           unsigned int uSecond)
    : uHour(m_uHour), uMinute(m_uMinute), uSecond(m_uSecond) {
    Set(uHour, uMinute, uSecond);
}
/*************************************************************************
【函数名称】       （~Time)
【函数功能】       （析构函数)
【参数】           （空)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
Time::~Time() {

}
/*************************************************************************
【函数名称】       （Time)
【函数功能】       （拷贝构造函数)
【参数】           （常引用的Time类对象time)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
Time::Time(const Time& Time)
    : uHour(m_uHour), uMinute(m_uMinute), uSecond(m_uSecond) {
    m_uHour = Time.uHour;
    m_uMinute = Time.uMinute;
    m_uSecond = Time.uSecond;
}
/*************************************************************************
【函数名称】       （operator=)
【函数功能】       （重载赋值运算符)
【参数】           （常引用的Time类对象time)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
Time Time::operator=(const Time& Time) {
    if (this != &Time)
    {
        m_uHour = Time.m_uHour;
        m_uMinute = Time.m_uMinute;
        m_uSecond = Time.m_uSecond;
    }

    return *this;
}
/*************************************************************************
【函数名称】       （Set)
【函数功能】       （给Time类对象赋值)
【参数】           （三个分别代表时分秒的无符号短整型数)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
void Time::Set(unsigned int uHour,
               unsigned int uMinute,
               unsigned int uSecond) {
    if (IsValid(uHour, uMinute, uSecond)) {
        m_uHour = uHour;
        m_uMinute = uMinute;
        m_uSecond = uSecond;
    }
}
/*************************************************************************
【函数名称】       （SetHour)
【函数功能】       （给Time类对象的m_uHour成员赋值)
【参数】           （代表小时的无符号短整型数)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.6)
*************************************************************************/
void Time::SetHour(unsigned int uHour) {
    if (IsValid(uHour, m_uMinute, m_uSecond)) {
        m_uHour = uHour;
    }
}
/*************************************************************************
【函数名称】       （SetMinute)
【函数功能】       （给Time类对象的m_uMinute成员赋值)
【参数】           （代表分钟的无符号短整型数)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.6)
*************************************************************************/
void Time::SetMinute(unsigned int uMinute) {
    if (IsValid(m_uHour, uMinute, m_uSecond)) {
        m_uMinute = uMinute;
    }
}
/*************************************************************************
【函数名称】       （SetSecond)
【函数功能】       （给Time类对象的m_uSecond成员赋值)
【参数】           （代表秒的无符号短整型数)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.6)
*************************************************************************/
void Time::SetSecond(unsigned int uSecond) {
    if (IsValid(m_uHour, m_uMinute, uSecond)) {
        m_uSecond = uSecond;
    }
}
/*************************************************************************
【函数名称】       （InSeconds)
【函数功能】       （返回当前Time对象表示的时间转成秒数的结果)
【参数】           （代表秒的无符号短整型数)
【返回值】         （空)
【开发者及日期】   （洪宇睿 2021.8.6)
*************************************************************************/
unsigned int Time::InSeconds() const {
    return m_uHour * 3600 + m_uMinute * 60 + m_uSecond;
}
/*************************************************************************
【函数名称】       （IsValid)
【函数功能】       （判断Time类对象是否有效)
【参数】           （三个分别代表时分秒的无符号短整型数)
【返回值】         （布尔型,存储Time类对象是否为有效日期)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
bool Time::IsValid(unsigned int uHour,
    unsigned int uMinute, unsigned int uSecond) {
    if (uHour < 24 && uMinute < 60 && uSecond < 60) {
        return true;
    }
    else {
        return false;
    }
}
/*************************************************************************
【函数名称】       （operator==)
【函数功能】       （重载等于运算符)
【参数】           （常引用的Time类对象time)
【返回值】         （布尔值,比较的结果)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
bool Time::operator==(const Time& time) const {
    if (m_uHour == time.m_uHour && m_uMinute == time.m_uMinute
            && m_uSecond == time.m_uSecond) {
        return true;
    }
    else {
        return false;
    }
}
/*************************************************************************
【函数名称】       （operator!=)
【函数功能】       （重载等于运算符)
【参数】           （常引用的Time类对象time)
【返回值】         （布尔值,比较的结果)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
bool Time::operator!=(const Time& time) const {
    return !operator==(time);
}
/*************************************************************************
【函数名称】       （operator>)
【函数功能】       （重载大于运算符)
【参数】           （常引用的Time类对象time)
【返回值】         （布尔值,比较的结果)
【开发者及日期】   （洪宇睿 2021.8.1)
*************************************************************************/
bool Time::operator>(const Time& time) const {
    if ((m_uHour > time.m_uHour)
        || ((m_uHour == time.m_uHour) && (m_uMinute > time.m_uMinute))
            || ((m_uHour == time.m_uHour) && (m_uMinute == time.m_uMinute)
                && (m_uSecond > time.m_uSecond))) {
        return true;
    }
    else {
        return false;
    }
}
/*************************************************************************
【函数名称】       （operator>=)
【函数功能】       （重载大于等于运算符)
【参数】           （常引用的Time类对象time)
【返回值】         （布尔值,比较的结果)
【开发者及日期】   （洪宇睿 2021.8.5)
*************************************************************************/
bool Time::operator>=(const Time &time) const {
    return operator>(time) || operator==(time);
}
/*************************************************************************
【函数名称】       （operator<=)
【函数功能】       （重载小于等于运算符)
【参数】           （常引用的Time类对象time)
【返回值】         （布尔值,比较的结果)
【开发者及日期】   （洪宇睿 2021.8.5)
*************************************************************************/
bool Time::operator<=(const Time& time) const {
    return operator>(time);
}
/*************************************************************************
【函数名称】       （operator<)
【函数功能】       （重载小于运算符)
【参数】           （常引用的Time类对象time)
【返回值】         （布尔值,比较的结果)
【开发者及日期】   （洪宇睿 2021.8.5)
*************************************************************************/
bool Time::operator<(const Time &time) const {
    return !operator>=(time);
}
/*************************************************************************
【函数名称】       （operator++())
【函数功能】       （重载左++运算符)
【参数】           （空)
【返回值】         （同一Time类对象)
【开发者及日期】   （洪宇睿 2021.8.7)
*************************************************************************/
Time& Time::operator++() {
    if (m_uMinute == 59 && m_uSecond == 59) {
        m_uHour++;
    }
    if (m_uSecond == 59) {
        m_uMinute++;
    }
    m_uSecond++;
    m_uHour %= 24;
    m_uMinute %= 60;
    m_uSecond %= 60;
    return *this;
}
/*************************************************************************
【函数名称】       （operator++(int))
【函数功能】       （重载右++运算符)
【参数】           （空)
【返回值】         （与原对象值相同的新建Time类对象)
【开发者及日期】   （洪宇睿 2021.8.7)
*************************************************************************/
Time Time::operator++(int) {
    Time time = (*this);
    if (time.m_uMinute == 59 && time.m_uSecond == 59) {
        time.m_uHour++;
    }
    if (time.m_uSecond == 59) {
        time.m_uMinute++;
    }
    time.m_uSecond++;
    time.m_uHour %= 24;
    time.m_uMinute %= 60;
    time.m_uSecond %= 60;
    return time;
}
/*************************************************************************
【函数名称】       （operator--())
【函数功能】       （重载左--运算符)
【参数】           （空)
【返回值】         （同一Time类对象)
【开发者及日期】   （洪宇睿 2021.8.7)
*************************************************************************/
Time& Time::operator--() {
    if (m_uMinute == 0 && m_uSecond == 0) {
        m_uHour += 23;
    }
    if (m_uSecond == 59) {
        m_uMinute += 59;
    }
    m_uSecond += 59;
    m_uHour %= 24;
    m_uMinute %= 60;
    m_uSecond %= 60;
    return *this;
}
/*************************************************************************
【函数名称】       （operator(int))
【函数功能】       （重载右--运算符)
【参数】           （空)
【返回值】         （与原对象值相同的新建Time类对象)
【开发者及日期】   （洪宇睿 2021.8.7)
*************************************************************************/
Time Time::operator--(int) {
    Time time = (*this);
    if (time.m_uMinute == 59 && time.m_uSecond == 59) {
        time.m_uHour += 23;
    }
    if (time.m_uSecond == 59) {
        time.m_uMinute += 59;
    }
    time.m_uSecond += 59;
    time.m_uHour %= 24;
    time.m_uMinute %= 60;
    time.m_uSecond %= 60;
    return time;
}
/*************************************************************************
【函数名称】       （operator-())
【函数功能】       （重载减法运算符)
【参数】           （空)
【返回值】         （整型数,两时间的代数差)
【开发者及日期】   （洪宇睿 2021.8.7)
*************************************************************************/
int Time::operator-(const Time& time) const {
    return this->InSeconds() - time.InSeconds();
}
/*************************************************************************
【函数名称】       （operator<<())
【函数功能】       （重载输出运算符)
【参数】           （输出流, 常引用的Time类对象)
【返回值】         （输出流对象)
【开发者及日期】   （洪宇睿 2021.8.7)
*************************************************************************/
ostream& operator<<(ostream& Stream, const Time& time) {
    Stream << time.uHour << ":" << time.uMinute << ":" << time.uSecond;
    return Stream;
}
/*************************************************************************
【函数名称】       （operator>>())
【函数功能】       （重载输入运算符)
【参数】           （输入流, 接收的Time类对象)
【返回值】         （输入流对象)
【开发者及日期】   （洪宇睿 2021.8.7)
*************************************************************************/
istream& operator>>(istream& Stream, Time& time) {
    char sep = ':';
    Stream >> time.m_uHour >> sep >> time.m_uMinute >> sep >> time.m_uSecond;
    return Stream;
}
